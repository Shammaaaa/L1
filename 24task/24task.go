package main

import (
	"fmt"
	"math"
)

// Структура Point
type Point struct {
	x, y float64
}

// Конструктор для создания новой точки
func NewPoint(x, y float64) Point {
	return Point{x, y}
}

// Метод для вычисления расстояния между двумя точками
func (p Point) DistanceTo(other Point) float64 {
	dx := p.x - other.x
	dy := p.y - other.y
	return math.Sqrt(dx*dx + dy*dy)
}

func main() {
	// Создание двух точек
	p1 := NewPoint(1.0, 5.0)
	p2 := NewPoint(4.0, 9.0)

	// Вычисление расстояния между точками
	distance := p1.DistanceTo(p2)

	// Вывод расстояния
	fmt.Printf("Расстояние между точками: %.2f\n", distance)
}

/*
В этом примере мы создаем структуру Point, которая имеет два инкапсулированных параметра x и y.
Затем мы определяем конструктор NewPoint, который принимает значения x и y и возвращает новый объект Point.
Для вычисления расстояния между двумя точками мы добавляем метод DistanceTo к структуре Point,
который принимает вторую точку в качестве аргумента и использует формулу расстояния между двумя точками на плоскости.
В функции main мы создаем две точки, вызываем метод DistanceTo для вычисления расстояния и выводим результат на экран
*/
