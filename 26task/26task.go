package main

import (
	"fmt"
	"strings"
)

// Функция для проверки уникальности символов в строке
func isUnique(str string) bool {
	// Преобразуем строку в нижний регистр
	str = strings.ToLower(str)

	// Создаем карту для отслеживания символов
	charMap := make(map[rune]bool)

	// Перебираем каждый символ в строке
	for _, char := range str {
		// Если символ уже присутствует в карте, то возвращаем false (символ не уникален)
		if charMap[char] {
			return false
		}
		// Добавляем символ в карту
		charMap[char] = true
	}

	// Если были проверены все символы и не было найдено повторяющихся, возвращаем true
	return true
}

func main() {
	// Примеры строк
	str1 := "abcd"
	str2 := "abCdefAaf"
	str3 := "aabcd"

	// Проверяем уникальность символов в каждой строке
	fmt.Printf("Строка '%s': %t\n", str1, isUnique(str1))
	fmt.Printf("Строка '%s': %t\n", str2, isUnique(str2))
	fmt.Printf("Строка '%s': %t\n", str3, isUnique(str3))
}

/*
В этом примере мы определяем функцию isUnique, которая принимает строку str и возвращает true,
если все символы в строке уникальны, и false в противном случае. Функция сначала преобразует строку в нижний регистр с помощью функции strings.ToLower.
Затем она использует карту charMap, чтобы отслеживать, встречался ли символ уже в строке или нет.
Если символ уже присутствует в карте, функция возвращает false. Если все символы проверены и не было найдено повторяющихся символов, функция возвращает true.
В функции main мы проверяем уникальность символов в трех примерах строк и выводим результаты.
 */
