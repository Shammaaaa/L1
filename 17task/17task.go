package main

import (
	"fmt"
	"sort"
)

func main() {
	arr := []int{2, 4, 6, 8, 10, 12, 14, 16, 18, 20}
	key := 12

	sort.Ints(arr) // Сортировка массива перед выполнением бинарного поиска
	fmt.Println("Отсортированный массив:", arr)

	index := sort.SearchInts(arr, key) // Бинарный поиск в отсортированном массиве

	if index < len(arr) && arr[index] == key {
		fmt.Printf("Элемент %d найден в массиве на позиции %d\n", key, index)
	} else {
		fmt.Printf("Элемент %d не найден в массиве\n", key)
	}
}

/*
Приведенный код демонстрирует пример бинарного поиска на языке Go с использованием методов из пакета sort.
Вначале выполняется сортировка массива с помощью функции sort.Ints, а затем выполняется бинарный поиск с использованием функции sort.SearchInts.
Функция sort.SearchInts возвращает индекс элемента в массиве или место, куда данный элемент должен быть вставлен, если он не найден.
Результатом выполнения кода будет выведено сообщение о том, был ли найден элемент key в отсортированном массиве,
и если да, то его позиция. Если элемент не найден, будет выведено соответствующее сообщение.
*/
